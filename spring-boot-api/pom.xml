<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.louisamoros</groupId>
    <artifactId>template-spring-boot</artifactId>
    <version>0.1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>template spring boot</name>
    <description>A Sprint Boot template to start projects from scratch</description>

    <properties>
        <java.version>1.8</java.version>
        <checkstyle-plugin.version>2.17</checkstyle-plugin.version>
        <maven-compiler.version>3.1</maven-compiler.version>
        <cassandra.version>3.1.3</cassandra.version>
        <jackson.version>2.8.6</jackson.version>
        <jacoco.version>0.7.7.201606060606</jacoco.version>
        <commons-io.version>2.5</commons-io.version>

        <!-- Test -->
        <rest-assured.version>2.9.0</rest-assured.version>

        <!-- Project Plugins -->
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>2.18.1</maven-failsafe-plugin.version>
        <docker-maven-plugin.version>0.19.1</docker-maven-plugin.version>

        <!-- We don't want to run your integration tests each time weâ€™re compiling.
        To separate unit test from integration tests we will use the following two properties.-->
        <unit-tests.skip>false</unit-tests.skip>
        <integration-tests.skip>false</integration-tests.skip>

        <!-- Sonar -->
        <sonar.language>java</sonar.language>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <profiles>
        <!-- Sonar with Jacoco -->
        <profile>
            <id>sonar-coverage</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.jacoco</groupId>
                            <artifactId>jacoco-maven-plugin</artifactId>
                            <version>${jacoco.version}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <configuration>
                            <append>true</append>
                        </configuration>
                        <executions>
                            <execution>
                                <id>agent-for-ut</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>agent-for-it</id>
                                <goals>
                                    <goal>prepare-agent-integration</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>jacoco-site</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <!-- spring boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- comes with junit, spring test, assertJ, mockito, Hamcrest... -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Tests -->
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${rest-assured.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <finalName>jawg-style-registry</finalName>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler.version}</version>
                <configuration>
                    <compilerArguments>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </compilerArguments>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <!-- Maven checkstyle -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle-plugin.version}</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <configLocation>checkstyle.xml</configLocation>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                            <suppressionsLocation>${basedir}/suppressions.xml</suppressionsLocation>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Maven surefire plugin to execute the unit tests-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipTests>${unit-tests.skip}</skipTests>
                    <!-- Exclude all the integration tests -->
                    <excludes>
                        <exclude>**/*IT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- Maven failsafe plugin to execute the integration tests-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <configuration>
                    <skipTests>${integration-tests.skip}</skipTests>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--TODO integrate db docker for ITs-->
            <!-- Maven docker plugin to start/stop/rm container when running IT -->
            <!--<plugin>-->
            <!--<groupId>io.fabric8</groupId>-->
            <!--<artifactId>docker-maven-plugin</artifactId>-->
            <!--<version>${docker-maven-plugin.version}</version>-->
            <!--<configuration>-->
            <!--<useColor>true</useColor>-->
            <!--<verbose>true</verbose>-->
            <!--<removeVolumes>true</removeVolumes>-->
            <!--<images>-->
            <!--<image>-->
            <!--<alias>api-cassandra</alias>-->
            <!--<name>cassandra-test</name>-->
            <!--<external>-->
            <!--<type>compose</type>-->
            <!--<basedir>cassandra</basedir>-->
            <!--<composeFile>cassandra-compose.yml</composeFile>-->
            <!--</external>-->
            <!--</image>-->
            <!--</images>-->
            <!--</configuration>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<id>start</id>-->
            <!--<phase>pre-integration-test</phase>-->
            <!--<goals>-->
            <!--<goal>start</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--<execution>-->
            <!--<id>stop</id>-->
            <!--<phase>post-integration-test</phase>-->
            <!--<goals>-->
            <!--<goal>stop</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->
        </plugins>
    </build>

</project>
